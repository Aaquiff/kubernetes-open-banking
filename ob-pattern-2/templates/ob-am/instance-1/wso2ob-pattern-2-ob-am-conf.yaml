# Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ template "ob-pattern-2.resource.prefix" . }}-ob-am-1-conf
  namespace : {{ .Release.Namespace }}
data:
  deployment-berlin.toml: |-
    #================configs related to carbon.xml=============
    [server]
    hostname = "{{ .Values.wso2.deployment.ob.am.ingress.management.hostname }}"
    node_ip = "$env{NODE_IP}"
    mode = "single" #single or ha
    base_path = "${carbon.protocol}://${carbon.host}:${carbon.management.port}"
    #discard_empty_caches = false
    server_role = "default"
    #================config related to axis2.xml===============
    globally_engaged_modules = ["mtlscertvalidator"]
    #================end config related to axis2.xml===========

    [transport.https.properties]
    proxyPort = 443

    [tenant_mgt]
    enable_email_domain = true

    [keystore.tls]
    file_name =  "wso2carbon.jks"
    type =  "JKS"
    password =  "wso2carbon"
    alias =  "wso2carbon"
    key_password =  "wso2carbon"

    #================configs related to user-mgt.xml=============
    [super_admin]
    username = "admin@wso2.com"
    password = "wso2123"
    create_admin_account = true

    [realm_manager]
    data_source= "WSO2UM_DB"

    [user_store]
    type = "database_unique_id"
    class = "org.wso2.carbon.user.core.jdbc.UniqueIDJDBCUserStoreManager"

    [user_store.properties]
    UsernameJavaRegEx = "a-zA-Z0-9@._-{3,30}$"
    UsernameJavaScriptRegEx = "^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,4}$"
    SCIMEnabled = false
    IsBulkImportSupported = false
    LeadingOrTrailingSpaceAllowedInUserName = false
    UsernameWithEmailJavaScriptRegEx = "^[\\S]{3,30}$"

    [authorization_manager]
    class = "org.wso2.carbon.user.core.authorization.JDBCAuthorizationManager"

    [authorization_manager.properties]
    AdminRoleManagementPermissions = "/permission"
    AuthorizationCacheEnabled = true
    GetAllRolesOfUserEnabled = false

    #================configs related to master-datasources.xml=============

    # for registry data
    [database.shared_db]
    {{- if eq .Values.wso2.deployment.ob.config.datasources.rdbms.type "mysql" }}
    url = "jdbc:mysql://{{ .Values.wso2.deployment.ob.config.datasources.rdbms.server.hostname }}:{{ .Values.wso2.deployment.ob.config.datasources.rdbms.server.port }}/{{ .Values.wso2.deployment.ob.config.datasources.databases.openBankingGovernanceRegistry.name }}?autoReconnect=true&amp;useSSL=false"
    {{- else if eq .Values.wso2.deployment.ob.config.datasources.rdbms.type "mssql" }}
    url = "jdbc:sqlserver://{{ .Values.wso2.deployment.ob.config.datasources.rdbms.server.hostname }}:{{ .Values.wso2.deployment.ob.config.datasources.rdbms.server.port }};databaseName={{ .Values.wso2.deployment.ob.config.datasources.databases.openBankingGovernanceRegistry.name }};SendStringParametersAsUnicode=false"
    {{- end }}
    username = "{{ .Values.wso2.deployment.ob.config.datasources.rdbms.server.username }}"
    password = "{{ .Values.wso2.deployment.ob.config.datasources.rdbms.server.password }}"
    driver = "{{ .Values.wso2.deployment.ob.config.datasources.rdbms.driverClassName }}"

    [database.shared_db.pool_options]
    maxActive = "150"
    maxWait = "60000"
    minIdle ="5"
    testOnBorrow = true
    validationQuery="SELECT 1"
    #Use below for oracle
    #validationQuery="SELECT 1 FROM DUAL"
    validationInterval="30000"
    defaultAutoCommit=false

    # for api manager data
    [database.apim_db]
    {{- if eq .Values.wso2.deployment.ob.config.datasources.rdbms.type "mysql" }}
    url = "jdbc:mysql://{{ .Values.wso2.deployment.ob.config.datasources.rdbms.server.hostname }}:{{ .Values.wso2.deployment.ob.config.datasources.rdbms.server.port }}/{{ .Values.wso2.deployment.ob.config.datasources.databases.apiManagement.name }}?autoReconnect=true&amp;useSSL=false"
    {{- else if eq .Values.wso2.deployment.ob.config.datasources.rdbms.type "mssql" }}
    url = "jdbc:sqlserver://{{ .Values.wso2.deployment.ob.config.datasources.rdbms.server.hostname }}:{{ .Values.wso2.deployment.ob.config.datasources.rdbms.server.port }};databaseName={{ .Values.wso2.deployment.ob.config.datasources.databases.apiManagement.name }};SendStringParametersAsUnicode=false"
    {{- end }}
    username = "{{ .Values.wso2.deployment.ob.config.datasources.rdbms.server.username }}"
    password = "{{ .Values.wso2.deployment.ob.config.datasources.rdbms.server.password }}"
    driver = "{{ .Values.wso2.deployment.ob.config.datasources.rdbms.driverClassName }}"

    [database.apim_db.pool_options]
    maxActive = "150"
    maxWait = "60000"
    minIdle ="5"
    testOnBorrow = true
    validationQuery="SELECT 1"
    #Use below for oracle
    #validationQuery="SELECT 1 FROM DUAL"
    validationInterval="30000"
    defaultAutoCommit=false

    # for am-config registry
    [database.config]
    {{- if eq .Values.wso2.deployment.ob.config.datasources.rdbms.type "mysql" }}
    url = "jdbc:mysql://{{ .Values.wso2.deployment.ob.config.datasources.rdbms.server.hostname }}:{{ .Values.wso2.deployment.ob.config.datasources.rdbms.server.port }}/{{ .Values.wso2.deployment.ob.config.datasources.databases.amConfigRegistry.name }}?autoReconnect=true&amp;useSSL=false"
    {{- else if eq .Values.wso2.deployment.ob.config.datasources.rdbms.type "mssql" }}
    url = "jdbc:sqlserver://{{ .Values.wso2.deployment.ob.config.datasources.rdbms.server.hostname }}:{{ .Values.wso2.deployment.ob.config.datasources.rdbms.server.port }};databaseName={{ .Values.wso2.deployment.ob.config.datasources.databases.amConfigRegistry.name }};SendStringParametersAsUnicode=false"
    {{- end }}
    username = "{{ .Values.wso2.deployment.ob.config.datasources.rdbms.server.username }}"
    password = "{{ .Values.wso2.deployment.ob.config.datasources.rdbms.server.password }}"
    driver = "{{ .Values.wso2.deployment.ob.config.datasources.rdbms.driverClassName }}"

    [database.config.pool_options]
    maxActive = "150"
    maxWait = "60000"
    minIdle ="5"
    testOnBorrow = true
    validationQuery="SELECT 1"
    #Use below for oracle
    #validationQuery="SELECT 1 FROM DUAL"
    validationInterval="30000"
    defaultAutoCommit=false

    # for user management data
    [[datasource]]
    id="WSO2UM_DB"
    {{- if eq .Values.wso2.deployment.ob.config.datasources.rdbms.type "mysql" }}
    url = "jdbc:mysql://{{ .Values.wso2.deployment.ob.config.datasources.rdbms.server.hostname }}:{{ .Values.wso2.deployment.ob.config.datasources.rdbms.server.port }}/{{ .Values.wso2.deployment.ob.config.datasources.databases.user.name }}?autoReconnect=true&amp;useSSL=false"
    {{- else if eq .Values.wso2.deployment.ob.config.datasources.rdbms.type "mssql" }}
    url = "jdbc:sqlserver://{{ .Values.wso2.deployment.ob.config.datasources.rdbms.server.hostname }}:{{ .Values.wso2.deployment.ob.config.datasources.rdbms.server.port }};databaseName={{ .Values.wso2.deployment.ob.config.datasources.databases.user.name }};SendStringParametersAsUnicode=false"
    {{- end }}
    username = "{{ .Values.wso2.deployment.ob.config.datasources.rdbms.server.username }}"
    password = "{{ .Values.wso2.deployment.ob.config.datasources.rdbms.server.password }}"
    driver = "{{ .Values.wso2.deployment.ob.config.datasources.rdbms.driverClassName }}"
    jmx_enable=false
    pool_options.maxActive = "150"
    pool_options.maxWait = "60000"
    pool_options.minIdle = "5"
    pool_options.testOnBorrow = true
    pool_options.validationQuery="SELECT 1"
    #Use below for oracle
    #validationQuery="SELECT 1 FROM DUAL"
    pool_options.validationInterval="30000"
    pool_options.defaultAutoCommit=false

    # for getting statistics to API Manager
    [[datasource]]
    id="WSO2AM_STATS_DB"
    {{- if eq .Values.wso2.deployment.ob.config.datasources.rdbms.type "mysql" }}
    url = "jdbc:mysql://{{ .Values.wso2.deployment.ob.config.datasources.rdbms.server.hostname }}:{{ .Values.wso2.deployment.ob.config.datasources.rdbms.server.port }}/{{ .Values.wso2.deployment.ob.config.datasources.databases.apiManagementStats.name }}?autoReconnect=true&amp;useSSL=false"
    {{- else if eq .Values.wso2.deployment.ob.config.datasources.rdbms.type "mssql" }}
    url = "jdbc:sqlserver://{{ .Values.wso2.deployment.ob.config.datasources.rdbms.server.hostname }}:{{ .Values.wso2.deployment.ob.config.datasources.rdbms.server.port }};databaseName={{ .Values.wso2.deployment.ob.config.datasources.databases.apiManagementStats.name }};SendStringParametersAsUnicode=false"
    {{- end }}
    username = "{{ .Values.wso2.deployment.ob.config.datasources.rdbms.server.username }}"
    password = "{{ .Values.wso2.deployment.ob.config.datasources.rdbms.server.password }}"
    driver = "{{ .Values.wso2.deployment.ob.config.datasources.rdbms.driverClassName }}"
    jmx_enable=false
    pool_options.maxActive = "150"
    pool_options.maxWait = "60000"
    pool_options.minIdle = "5"
    pool_options.testOnBorrow = true
    pool_options.validationQuery="SELECT 1"
    #Use below for oracle
    #validationQuery="SELECT 1 FROM DUAL"
    pool_options.validationInterval="30000"
    pool_options.defaultAutoCommit=false

    #================configs related to api-manager.xml=============

    [[apim.gateway.environment]]
    name = "Production and Sandbox"
    type = "hybrid"
    display_in_api_console = true
    description = "This is a hybrid gateway that handles both production and sandbox token traffic."
    show_as_token_endpoint_url = true
    service_url = "https://localhost:${mgt.transport.https.port}/services/"
    username= "${admin.username}"
    password= "${admin.password}"
    ws_endpoint = "ws://localhost:9099"
    wss_endpoint = "wss://localhost:8099"
    http_endpoint = "http://{{ .Values.wso2.deployment.ob.am.ingress.gateway.hostname }}"
    https_endpoint = "https://{{ .Values.wso2.deployment.ob.am.ingress.gateway.hostname }}"

    [apim.cors]
    allow_origins = "*"
    allow_methods = ["GET","PUT","POST","DELETE","PATCH","OPTIONS"]
    allow_headers = ["authorization","Access-Control-Allow-Origin","Content-Type","SOAPAction","apikey"]
    allow_credentials = false

    [apim.throttling]
    enable_advanced_throttling = true
    enable_data_publishing = true
    enable_policy_deploy = true
    receiver_url = "{tcp://localhost:9611},{tcp://{{ template "ob-pattern-2.resource.prefix" . }}-ob-am-2-service:9611}"
    receiver_auth_url = "{ssl://localhost:9711},{ssl://{{ template "ob-pattern-2.resource.prefix" . }}-ob-am-2-service:9711}"
    jms.topic_connection_factory = "amqp://admin!wso2.com!carbon.super:${admin.password}@clientid/carbon?brokerlist='tcp://${carbon.local.ip}:${jms.port};tcp://{{ template "ob-pattern-2.resource.prefix" . }}-ob-am-2-service:5672?retries='5'%26connectdelay='50''"
    receiver_username = "$ref{super_admin.username}@carbon.super"

    [apim.analytics]
    enable = true
    receiver_urls = "{tcp://{{ template "ob-pattern-2.resource.prefix" . }}-ob-bi-worker-statefulset-0.{{ template "ob-pattern-2.resource.prefix" . }}-ob-bi-worker-headless-service:7612,tcp://{{ template "ob-pattern-2.resource.prefix" . }}-ob-bi-worker-statefulset-1.{{ template "ob-pattern-2.resource.prefix" . }}-ob-bi-worker-headless-service:7612}"
    store_api_url = "https://{{ template "ob-pattern-2.resource.prefix" . }}-ob-bi-worker-service:7444"
    event_publisher_impl = "com.wso2.finance.open.banking.gateway.uk.monitoring.publisher.OBUsageDataBridgeDataPublisher"
    receiver_username = "$ref{super_admin.username}@carbon.super"
    receiver_password = "$ref{super_admin.password}"

    [apim.key_manager]
    service_url = "https://{{ template "ob-pattern-2.resource.prefix" . }}-ob-km-service:9446${carbon.context}services/"
    key_manager_client_impl = "com.wso2.finance.open.banking.sca.keymanager.SCABasedKeyManagerClient"

    [apim.key_manager.configuration]
    ServerURL = "https://{{ template "ob-pattern-2.resource.prefix" . }}-ob-km-service:9446${carbon.context}services/"
    Username = "${admin.username}"
    Password = "${admin.password}"
    TokenURL = "https://localhost:${https.nio.port}/token"
    RevokeURL = "https://localhost:${https.nio.port}/revoke"

    [apim.oauth_config]
    enable_outbound_auth_header = true
    white_listed_scopes = ["^device_.*", "openid", "^OB_.*", "^TIME_.*"]
    revoke_endpoint = "https://localhost:${https.nio.port}/revoke"

    [apim.devportal]
    url = "https://{{ .Values.wso2.deployment.ob.am.ingress.management.hostname }}/devportal"
    display_multiple_versions = true
    enable_comments = false
    enable_ratings = false
    enable_forum = false

    [apim.jwt_authenitcation]
    subscription_validation_via_km = false

    [[apim.devportal.application_attributes]]
    required = false
    hidden = false
    name ="regulatory"
    description = "Regulatory Compliance"

    #================configs related to axis2.xml=============

    [[custom_message_formatters]]
    class = "org.apache.axis2.format.PlainTextFormatter"
    content_type = "application/jwt"

    [[custom_message_builders]]
    class = "org.apache.axis2.format.PlainTextBuilder"
    content_type = "application/jwt"

    [transport.passthru_https.sender.parameters]
    HostnameVerifier = "AllowAll"

    [passthru_http]
    "http.headers.preserve"="Content-Type,Date"

    [transport.passthru_https.listener.parameters]
    "SSLVerifyClient" = "optional"

    #================configs related to identity.xml=============

    [identity.auth_framework.endpoint]
    identity_server_service_url="https://{{ template "ob-pattern-2.resource.prefix" . }}-ob-am-service:9443/services"
    username="admin@wso2.com"
    password="wso2123"

    [identity_data_source]
    skip_db_schema_creation = true

    [oauth.endpoints]
    oauth2_consent_page = "${carbon.protocol}://${carbon.host}/ob/authenticationendpoint/oauth2_authz.do"
    oauth2_error_page = "${carbon.protocol}://${carbon.host}/ob/authenticationendpoint/oauth2_error.do"
    oidc_consent_page = "${carbon.protocol}://${carbon.host}/ob/authenticationendpoint/oauth2_consent.do"
    oidc_logout_consent_page = "${carbon.protocol}://${carbon.host}/ob/authenticationendpoint/oauth2_logout_consent.do"
    oidc_logout_page = "${carbon.protocol}://${carbon.host}/ob/authenticationendpoint/oauth2_logout.do"

    [oauth.grant_type]
    iwa_ntlm.enable = false
    jwt_bearer.enable = false

    [oauth.scope_validator]
    jdbc.enable = false
    xacml.enable = false

    [saml.endpoints]
    logout = "${carbon.protocol}://${carbon.host}:${carbon.management.port}/ob/authenticationendpoint/samlsso_logout.do"
    notification = "${carbon.protocol}://${carbon.host}:${carbon.management.port}/ob/authenticationendpoint/samlsso_notification.do"

    [passive_sts.endpoints]
    retry = "${carbon.protocol}://${carbon.host}:${carbon.management.port}/ob/authenticationendpoint/retry.do"

    [[resource.access_control]]
    context = "(.*)/api/openbanking/dynamic-client-registration/(.*)"
    secure="true"
    http_method="all"
    permissions=["/permission/admin"]

    [authentication.adaptive.event_publisher]
    url = "https://localhost:8280/"
    authentication.basic.enable = true

    #================configs related to identity-event.properties=============

    [[event_handler]]
    name="userPostSelfRegistration"
    subscriptions=["POST_ADD_USER"]

    #================configs related to open-banking-datasources.xml=============

    [open_banking_database]
    {{- if eq .Values.wso2.deployment.ob.config.datasources.rdbms.type "mysql" }}
    config.url = "jdbc:mysql://{{ .Values.wso2.deployment.ob.config.datasources.rdbms.server.hostname }}:{{ .Values.wso2.deployment.ob.config.datasources.rdbms.server.port }}/{{ .Values.wso2.deployment.ob.config.datasources.databases.openBanking.name }}?autoReconnect=true&amp;useSSL=false"
    {{- else if eq .Values.wso2.deployment.ob.config.datasources.rdbms.type "mssql" }}
    config.url = "jdbc:sqlserver://{{ .Values.wso2.deployment.ob.config.datasources.rdbms.server.hostname }}:{{ .Values.wso2.deployment.ob.config.datasources.rdbms.server.port }};databaseName={{ .Values.wso2.deployment.ob.config.datasources.databases.openBanking.name }};SendStringParametersAsUnicode=false"
    {{- end }}
    config.username = "{{ .Values.wso2.deployment.ob.config.datasources.rdbms.server.username }}"
    config.password = "{{ .Values.wso2.deployment.ob.config.datasources.rdbms.server.password }}"
    config.driver = "{{ .Values.wso2.deployment.ob.config.datasources.rdbms.driverClassName }}"

    [open_banking_database.config.pool_options]
    maxActive = "150"
    maxWait = "60000"
    minIdle ="5"
    testOnBorrow = true
    validationQuery="SELECT 1"
    #Use below for oracle
    #validationQuery="SELECT 1 FROM DUAL"
    validationInterval="30000"
    defaultAutoCommit=false

    #================configs related to open-banking.xml=============

    [open_banking]
    deployed_spec = "BERLIN"
    payable_accounts_retrieve_endpoint = "{{ .Values.wso2.deployment.ob.config.berlin.payableAccountsRetrieveEndpoint }}"
    sharable_accounts_retrieve_endpoint = "{{ .Values.wso2.deployment.ob.config.berlin.sharableAccountsRetrieveEndpoint }}"

    [open_banking.jdbc_persistence_manager.data_source]
    name= "WSO2OpenBankingDB"

    [open_banking.event_notifications]
    enable = false
    token_issuer = "www.openbank.com"
    api_url = "https://{{ template "ob-pattern-2.resource.prefix" . }}-ob-am-service:8243/open-banking/v3.1/event-notification"

    [open_banking.berlin]
    accounts_retrieve_endpoint = "https://{{ template "ob-pattern-2.resource.prefix" . }}-ob-am-service:9443/api/openbanking/backend-berlin/services/accounts/accounts"
    account_consent_self_link = "https://{{ template "ob-pattern-2.resource.prefix" . }}-ob-am-service:8243/xs2a/1.3.3/consents/%s"
    payment_resource_self_link = "https://{{ template "ob-pattern-2.resource.prefix" . }}-ob-am-service:8243/xs2a/1.3.3/%s/%s/%s"
    iban_single_acc_retrieval_validation.enable = "false"
    iban_acc_retrieval_validation.enable = "true"
    host = "{{ template "ob-pattern-2.resource.prefix" . }}-ob-am-service"
    port = "8243"
    acc_ref_type = "iban"

    [open_banking.berlin.freq_per_day]
    enable = true

    [open_banking.berlin.sca]
    prioritize_tpp_preference.enable = false
    selected_approach = "REDIRECT"
    auth_cancellation.enable = false
    oauth_metadata_endpoint = "https://{{ .Values.wso2.deployment.ob.am.ingress.gateway.hostname }}/.well-known/openid-configuration"
    update_psu_identification_endpoint = "https://{{ .Values.wso2.deployment.ob.km.ingress.hostname }}"
    update_psu_authentication_endpoint = "https://{{ .Values.wso2.deployment.ob.km.ingress.hostname }}"
    select_auth_method_endpoint = "https://{{ .Values.wso2.deployment.ob.km.ingress.hostname }}"
    auth_transaction_endpoint = "https://{{ .Values.wso2.deployment.ob.km.ingress.hostname }}"

    [open_banking.api_security]
    mtls_token_binding.enable = false

    [open_banking.api_security.global]
    username = "$ref{super_admin.username}"
    password = "$ref{super_admin.password}"

    [open_banking.cert_mgt]
    [open_banking.cert_mgt.cert_revocation_proxy]
    enable = false
    proxy_host = "PROXY_HOSTNAME"
    proxy_port = "8080"

    [open_banking.dcr]
    uri_validation.enable = true
    hostname_validation.enable = true
    software_id_as_application_name.enable = true

    [open_banking.bi_server]
    username = "$ref{super_admin.username}@carbon.super"
    password = "$ref{super_admin.password}"

    [open_banking.bi_server.data_publishing]
    enable = true
    server_url = "{tcp://{{ template "ob-pattern-2.resource.prefix" . }}-ob-bi-worker-statefulset-0.{{ template "ob-pattern-2.resource.prefix" . }}-ob-bi-worker-headless-service:7612,tcp://{{ template "ob-pattern-2.resource.prefix" . }}-ob-bi-worker-statefulset-1.{{ template "ob-pattern-2.resource.prefix" . }}-ob-bi-worker-headless-service:7612}"

    [open_banking.bi_server.tra]
    enable = true
    payment_validation.enable = true
    account_validation.enable = true

    [open_banking.bi_server.tra.receivers]
    account_validation_url = "http://{{ template "ob-pattern-2.resource.prefix" . }}-ob-bi-worker-service:8007/TRAAccountValidationApp/TRAValidationStream"
    payment_validation_url = "http://{{ template "ob-pattern-2.resource.prefix" . }}-ob-bi-worker-service:8007/TRAPaymentValidationApp/TRAValidationStream"

    [open_banking.bi_server.fraud_detection]
    enable = {{ .Values.wso2.deployment.ob.config.fraudDetection.enabled }}

    [open_banking.bi_server.fraud_detection.receivers]
    fraud_detection_url = "http://{{ template "ob-pattern-2.resource.prefix" . }}-ob-bi-worker-service:8007/FraudDetectionApp/FraudDetectionStream"
    invalid_submission_url = "http://{{ template "ob-pattern-2.resource.prefix" . }}-ob-bi-worker-service:8006/InvalidSubmissionsApp/InvalidSubmissionsStream"

    {{ if .Values.wso2.deployment.persistentRuntimeArtifacts.apacheSolrIndexing.enabled }}
    #================configs related to solr indexing=============
    [indexing]
    location = "/home/wso2carbon/solr/indexed-data"
    {{ end }}

  deployment-uk.toml: |-
    #================configs related to carbon.xml=============
    [server]
    hostname = "{{ .Values.wso2.deployment.ob.am.ingress.management.hostname }}"
    node_ip = "$env{NODE_IP}"
    mode = "single" #single or ha
    base_path = "${carbon.protocol}://${carbon.host}:${carbon.management.port}"
    #discard_empty_caches = false
    server_role = "default"
    #================config related to axis2.xml===============
    globally_engaged_modules = ["mtlscertvalidator"]
    #================end config related to axis2.xml===========

    [transport.https.properties]
    proxyPort = 443

    [tenant_mgt]
    enable_email_domain = true

    [keystore.tls]
    file_name =  "wso2carbon.jks"
    type =  "JKS"
    password =  "wso2carbon"
    alias =  "wso2carbon"
    key_password =  "wso2carbon"

    #================configs related to user-mgt.xml=============
    [super_admin]
    username = "admin@wso2.com"
    password = "wso2123"
    create_admin_account = true

    [realm_manager]
    data_source= "WSO2UM_DB"

    [user_store]
    type = "database_unique_id"
    class = "org.wso2.carbon.user.core.jdbc.UniqueIDJDBCUserStoreManager"

    [user_store.properties]
    UsernameJavaRegEx = "a-zA-Z0-9@._-{3,30}$"
    UsernameJavaScriptRegEx = "^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,4}$"
    SCIMEnabled = false
    IsBulkImportSupported = false
    LeadingOrTrailingSpaceAllowedInUserName = false
    UsernameWithEmailJavaScriptRegEx = "^[\\S]{3,30}$"

    [authorization_manager]
    class = "org.wso2.carbon.user.core.authorization.JDBCAuthorizationManager"

    [authorization_manager.properties]
    AdminRoleManagementPermissions = "/permission"
    AuthorizationCacheEnabled = true
    GetAllRolesOfUserEnabled = false

    #================configs related to master-datasources.xml=============

    # for registry data
    [database.shared_db]
    {{- if eq .Values.wso2.deployment.ob.config.datasources.rdbms.type "mysql" }}
    url = "jdbc:mysql://{{ .Values.wso2.deployment.ob.config.datasources.rdbms.server.hostname }}:{{ .Values.wso2.deployment.ob.config.datasources.rdbms.server.port }}/{{ .Values.wso2.deployment.ob.config.datasources.databases.openBankingGovernanceRegistry.name }}?autoReconnect=true&amp;useSSL=false"
    {{- else if eq .Values.wso2.deployment.ob.config.datasources.rdbms.type "mssql" }}
    url = "jdbc:sqlserver://{{ .Values.wso2.deployment.ob.config.datasources.rdbms.server.hostname }}:{{ .Values.wso2.deployment.ob.config.datasources.rdbms.server.port }};databaseName={{ .Values.wso2.deployment.ob.config.datasources.databases.openBankingGovernanceRegistry.name }};SendStringParametersAsUnicode=false"
    {{- end }}
    username = "{{ .Values.wso2.deployment.ob.config.datasources.rdbms.server.username }}"
    password = "{{ .Values.wso2.deployment.ob.config.datasources.rdbms.server.password }}"
    driver = "{{ .Values.wso2.deployment.ob.config.datasources.rdbms.driverClassName }}"

    [database.shared_db.pool_options]
    maxActive = "150"
    maxWait = "60000"
    minIdle ="5"
    testOnBorrow = true
    validationQuery="SELECT 1"
    #Use below for oracle
    #validationQuery="SELECT 1 FROM DUAL"
    validationInterval="30000"
    defaultAutoCommit=false

    # for api manager data
    [database.apim_db]
    {{- if eq .Values.wso2.deployment.ob.config.datasources.rdbms.type "mysql" }}
    url = "jdbc:mysql://{{ .Values.wso2.deployment.ob.config.datasources.rdbms.server.hostname }}:{{ .Values.wso2.deployment.ob.config.datasources.rdbms.server.port }}/{{ .Values.wso2.deployment.ob.config.datasources.databases.apiManagement.name }}?autoReconnect=true&amp;useSSL=false"
    {{- else if eq .Values.wso2.deployment.ob.config.datasources.rdbms.type "mssql" }}
    url = "jdbc:sqlserver://{{ .Values.wso2.deployment.ob.config.datasources.rdbms.server.hostname }}:{{ .Values.wso2.deployment.ob.config.datasources.rdbms.server.port }};databaseName={{ .Values.wso2.deployment.ob.config.datasources.databases.apiManagement.name }};SendStringParametersAsUnicode=false"
    {{- end }}
    username = "{{ .Values.wso2.deployment.ob.config.datasources.rdbms.server.username }}"
    password = "{{ .Values.wso2.deployment.ob.config.datasources.rdbms.server.password }}"
    driver = "{{ .Values.wso2.deployment.ob.config.datasources.rdbms.driverClassName }}"

    [database.apim_db.pool_options]
    maxActive = "150"
    maxWait = "60000"
    minIdle ="5"
    testOnBorrow = true
    validationQuery="SELECT 1"
    #Use below for oracle
    #validationQuery="SELECT 1 FROM DUAL"
    validationInterval="30000"
    defaultAutoCommit=false

    # for am-config registry
    [database.config]
    {{- if eq .Values.wso2.deployment.ob.config.datasources.rdbms.type "mysql" }}
    url = "jdbc:mysql://{{ .Values.wso2.deployment.ob.config.datasources.rdbms.server.hostname }}:{{ .Values.wso2.deployment.ob.config.datasources.rdbms.server.port }}/{{ .Values.wso2.deployment.ob.config.datasources.databases.amConfigRegistry.name }}?autoReconnect=true&amp;useSSL=false"
    {{- else if eq .Values.wso2.deployment.ob.config.datasources.rdbms.type "mssql" }}
    url = "jdbc:sqlserver://{{ .Values.wso2.deployment.ob.config.datasources.rdbms.server.hostname }}:{{ .Values.wso2.deployment.ob.config.datasources.rdbms.server.port }};databaseName={{ .Values.wso2.deployment.ob.config.datasources.databases.amConfigRegistry.name }};SendStringParametersAsUnicode=false"
    {{- end }}
    username = "{{ .Values.wso2.deployment.ob.config.datasources.rdbms.server.username }}"
    password = "{{ .Values.wso2.deployment.ob.config.datasources.rdbms.server.password }}"
    driver = "{{ .Values.wso2.deployment.ob.config.datasources.rdbms.driverClassName }}"

    [database.config.pool_options]
    maxActive = "150"
    maxWait = "60000"
    minIdle ="5"
    testOnBorrow = true
    validationQuery="SELECT 1"
    #Use below for oracle
    #validationQuery="SELECT 1 FROM DUAL"
    validationInterval="30000"
    defaultAutoCommit=false

    # for user management data
    [[datasource]]
    id="WSO2UM_DB"
    {{- if eq .Values.wso2.deployment.ob.config.datasources.rdbms.type "mysql" }}
    url = "jdbc:mysql://{{ .Values.wso2.deployment.ob.config.datasources.rdbms.server.hostname }}:{{ .Values.wso2.deployment.ob.config.datasources.rdbms.server.port }}/{{ .Values.wso2.deployment.ob.config.datasources.databases.user.name }}?autoReconnect=true&amp;useSSL=false"
    {{- else if eq .Values.wso2.deployment.ob.config.datasources.rdbms.type "mssql" }}
    url = "jdbc:sqlserver://{{ .Values.wso2.deployment.ob.config.datasources.rdbms.server.hostname }}:{{ .Values.wso2.deployment.ob.config.datasources.rdbms.server.port }};databaseName={{ .Values.wso2.deployment.ob.config.datasources.databases.user.name }};SendStringParametersAsUnicode=false"
    {{- end }}
    username = "{{ .Values.wso2.deployment.ob.config.datasources.rdbms.server.username }}"
    password = "{{ .Values.wso2.deployment.ob.config.datasources.rdbms.server.password }}"
    driver = "{{ .Values.wso2.deployment.ob.config.datasources.rdbms.driverClassName }}"
    jmx_enable=false
    pool_options.maxActive = "150"
    pool_options.maxWait = "60000"
    pool_options.minIdle = "5"
    pool_options.testOnBorrow = true
    pool_options.validationQuery="SELECT 1"
    #Use below for oracle
    #validationQuery="SELECT 1 FROM DUAL"
    pool_options.validationInterval="30000"
    pool_options.defaultAutoCommit=false

    # for getting statistics to API Manager
    [[datasource]]
    id="WSO2AM_STATS_DB"
    {{- if eq .Values.wso2.deployment.ob.config.datasources.rdbms.type "mysql" }}
    url = "jdbc:mysql://{{ .Values.wso2.deployment.ob.config.datasources.rdbms.server.hostname }}:{{ .Values.wso2.deployment.ob.config.datasources.rdbms.server.port }}/{{ .Values.wso2.deployment.ob.config.datasources.databases.apiManagementStats.name }}?autoReconnect=true&amp;useSSL=false"
    {{- else if eq .Values.wso2.deployment.ob.config.datasources.rdbms.type "mssql" }}
    url = "jdbc:sqlserver://{{ .Values.wso2.deployment.ob.config.datasources.rdbms.server.hostname }}:{{ .Values.wso2.deployment.ob.config.datasources.rdbms.server.port }};databaseName={{ .Values.wso2.deployment.ob.config.datasources.databases.apiManagementStats.name }};SendStringParametersAsUnicode=false"
    {{- end }}
    username = "{{ .Values.wso2.deployment.ob.config.datasources.rdbms.server.username }}"
    password = "{{ .Values.wso2.deployment.ob.config.datasources.rdbms.server.password }}"
    driver = "{{ .Values.wso2.deployment.ob.config.datasources.rdbms.driverClassName }}"
    jmx_enable=false
    pool_options.maxActive = "150"
    pool_options.maxWait = "60000"
    pool_options.minIdle = "5"
    pool_options.testOnBorrow = true
    pool_options.validationQuery="SELECT 1"
    #Use below for oracle
    #validationQuery="SELECT 1 FROM DUAL"
    pool_options.validationInterval="30000"
    pool_options.defaultAutoCommit=false

    #================configs related to api-manager.xml=============

    [apim.auth_manager]
    service_url = "https://{{ template "ob-pattern-2.resource.prefix" . }}-ob-km-service:9446${carbon.context}services/"

    [[apim.gateway.environment]]
    name = "Production and Sandbox"
    type = "hybrid"
    display_in_api_console = true
    description = "This is a hybrid gateway that handles both production and sandbox token traffic."
    show_as_token_endpoint_url = true
    service_url = "https://localhost:${mgt.transport.https.port}/services/"
    username= "${admin.username}"
    password= "${admin.password}"
    ws_endpoint = "ws://localhost:9099"
    wss_endpoint = "wss://localhost:8099"
    http_endpoint = "http://{{ .Values.wso2.deployment.ob.am.ingress.gateway.hostname }}"
    https_endpoint = "https://{{ .Values.wso2.deployment.ob.am.ingress.gateway.hostname }}"

    [apim.cors]
    allow_origins = "*"
    allow_methods = ["GET","PUT","POST","DELETE","PATCH","OPTIONS"]
    allow_headers = ["authorization","Access-Control-Allow-Origin","Content-Type","SOAPAction","apikey"]
    allow_credentials = false

    [apim.throttling]
    enable_advanced_throttling = true
    enable_data_publishing = true
    enable_policy_deploy = true
    receiver_url = "{tcp://localhost:9611},{tcp://{{ template "ob-pattern-2.resource.prefix" . }}-ob-am-2-service:9611}"
    receiver_auth_url = "{ssl://localhost:9711},{ssl://{{ template "ob-pattern-2.resource.prefix" . }}-ob-am-2-service:9711}"
    jms.topic_connection_factory = "amqp://admin!wso2.com!carbon.super:${admin.password}@clientid/carbon?brokerlist='tcp://${carbon.local.ip}:${jms.port};tcp://{{ template "ob-pattern-2.resource.prefix" . }}-ob-am-2-service:5672?retries='5'%26connectdelay='50''"
    receiver_username = "$ref{super_admin.username}@carbon.super"

    [apim.analytics]
    enable = true
    receiver_urls = "{tcp://{{ template "ob-pattern-2.resource.prefix" . }}-ob-bi-worker-statefulset-0.{{ template "ob-pattern-2.resource.prefix" . }}-ob-bi-worker-headless-service:7612,tcp://{{ template "ob-pattern-2.resource.prefix" . }}-ob-bi-worker-statefulset-1.{{ template "ob-pattern-2.resource.prefix" . }}-ob-bi-worker-headless-service:7612}"
    store_api_url = "https://{{ template "ob-pattern-2.resource.prefix" . }}-ob-bi-worker-service:7444"
    event_publisher_impl = "com.wso2.finance.open.banking.gateway.uk.monitoring.publisher.OBUsageDataBridgeDataPublisher"
    receiver_username = "$ref{super_admin.username}@carbon.super"
    receiver_password = "$ref{super_admin.password}"

    [apim.key_manager]
    service_url = "https://{{ template "ob-pattern-2.resource.prefix" . }}-ob-km-service:9446${carbon.context}services/"
    key_manager_client_impl = "com.wso2.finance.open.banking.sca.keymanager.SCABasedKeyManagerClient"

    [apim.key_manager.configuration]
    ServerURL = "https://{{ template "ob-pattern-2.resource.prefix" . }}-ob-km-service:9446${carbon.context}services/"
    Username = "${admin.username}"
    Password = "${admin.password}"
    TokenURL = "https://localhost:${https.nio.port}/token"
    RevokeURL = "https://localhost:${https.nio.port}/revoke"

    [apim.oauth_config]
    enable_outbound_auth_header = true
    white_listed_scopes = ["^device_.*", "openid", "^OB_.*", "^TIME_.*"]
    revoke_endpoint = "https://localhost:${https.nio.port}/revoke"

    [apim.devportal]
    url = "https://{{ .Values.wso2.deployment.ob.am.ingress.management.hostname }}/devportal"
    display_multiple_versions = true
    enable_comments = false
    enable_ratings = false
    enable_forum = false

    [apim.jwt_authenitcation]
    subscription_validation_via_km = false

    [[apim.devportal.application_attributes]]
    required = true
    hidden = false
    name ="regulatory"
    description = "Regulatory Compliance"

    [[apim.devportal.application_attributes]]
    required = false
    hidden = false
    name ="software_id_sandbox"
    description = "Software ID of the sandbox"

    [[apim.devportal.application_attributes]]
    required = false
    hidden = false
    name ="software_id_production"
    description = "Software ID of the production"

    [[apim.devportal.application_attributes]]
    required = false
    hidden = false
    name ="software_roles_sandbox"
    description = "Software roles of the sandbox"

    [[apim.devportal.application_attributes]]
    required = false
    hidden = false
    name ="software_roles_production"
    description = "Software roles of the production"

    [[apim.devportal.application_attributes]]
    required = false
    hidden = false
    name ="software_jwks_endpoint_sandbox"
    description = "JWKS endpoint of sandbox"

    [[apim.devportal.application_attributes]]
    required = false
    hidden = false
    name ="software_jwks_endpoint_production"
    description = "JWKS endpoint of production"

    [[apim.devportal.application_attributes]]
    required = false
    hidden = false
    name ="org_id_sandbox"
    description = "Organization ID of the sandbox"

    [[apim.devportal.application_attributes]]
    required = false
    hidden = false
    name ="org_id_production"
    description = "Organization ID of the production"

    [[apim.devportal.application_attributes]]
    required = false
    hidden = false
    name ="scope_sandbox"
    description = "Allowed scopes for sandbox"

    [[apim.devportal.application_attributes]]
    required = false
    hidden = false
    name ="scope_production"
    description = "Allowed scopes for production"


    #================configs related to axis2.xml=============

    [[custom_message_formatters]]
    class = "org.apache.axis2.format.PlainTextFormatter"
    content_type = "application/jwt"

    [[custom_message_builders]]
    class = "org.apache.axis2.format.PlainTextBuilder"
    content_type = "application/jwt"

    [transport.passthru_https.sender.parameters]
    HostnameVerifier = "AllowAll"

    [passthru_http]
    "http.headers.preserve"="Content-Type,Date"

    [transport.passthru_https.listener.parameters]
    "SSLVerifyClient" = "optional"

    #================configs related to identity.xml=============

    [identity.auth_framework.endpoint]
    identity_server_service_url="https://{{ template "ob-pattern-2.resource.prefix" . }}-ob-am-service:9443/services"
    username="admin@wso2.com"
    password="wso2123"

    [identity_data_source]
    skip_db_schema_creation = true

    [oauth.endpoints]
    oauth2_consent_page = "${carbon.protocol}://${carbon.host}/ob/authenticationendpoint/oauth2_authz.do"
    oauth2_error_page = "${carbon.protocol}://${carbon.host}/ob/authenticationendpoint/oauth2_error.do"
    oidc_consent_page = "${carbon.protocol}://${carbon.host}/ob/authenticationendpoint/oauth2_consent.do"
    oidc_logout_consent_page = "${carbon.protocol}://${carbon.host}/ob/authenticationendpoint/oauth2_logout_consent.do"
    oidc_logout_page = "${carbon.protocol}://${carbon.host}/ob/authenticationendpoint/oauth2_logout.do"

    [oauth.grant_type]
    iwa_ntlm.enable = false
    jwt_bearer.enable = false

    [oauth.scope_validator]
    jdbc.enable = false
    xacml.enable = false

    [saml.endpoints]
    logout = "${carbon.protocol}://${carbon.host}:${carbon.management.port}/ob/authenticationendpoint/samlsso_logout.do"
    notification = "${carbon.protocol}://${carbon.host}:${carbon.management.port}/ob/authenticationendpoint/samlsso_notification.do"

    [passive_sts.endpoints]
    retry = "${carbon.protocol}://${carbon.host}:${carbon.management.port}/ob/authenticationendpoint/retry.do"

    [[resource.access_control]]
    context = "(.*)/api/openbanking/dynamic-client-registration/(.*)"
    secure="true"
    http_method="all"
    permissions=["/permission/admin"]

    [authentication.adaptive.event_publisher]
    url = "https://localhost:8280/"
    authentication.basic.enable = true

    #================configs related to identity-event.properties=============

    [[event_handler]]
    name="userPostSelfRegistration"
    subscriptions=["POST_ADD_USER"]

    #================configs related to open-banking-datasources.xml=============

    [open_banking_database]
    {{- if eq .Values.wso2.deployment.ob.config.datasources.rdbms.type "mysql" }}
    config.url = "jdbc:mysql://{{ .Values.wso2.deployment.ob.config.datasources.rdbms.server.hostname }}:{{ .Values.wso2.deployment.ob.config.datasources.rdbms.server.port }}/{{ .Values.wso2.deployment.ob.config.datasources.databases.openBankingUK.name }}?autoReconnect=true&amp;useSSL=false"
    {{- else if eq .Values.wso2.deployment.ob.config.datasources.rdbms.type "mssql" }}
    config.url = "jdbc:sqlserver://{{ .Values.wso2.deployment.ob.config.datasources.rdbms.server.hostname }}:{{ .Values.wso2.deployment.ob.config.datasources.rdbms.server.port }};databaseName={{ .Values.wso2.deployment.ob.config.datasources.databases.openBankingUK.name }};SendStringParametersAsUnicode=false"
    {{- end }}
    config.username = "{{ .Values.wso2.deployment.ob.config.datasources.rdbms.server.username }}"
    config.password = "{{ .Values.wso2.deployment.ob.config.datasources.rdbms.server.password }}"
    config.driver = "{{ .Values.wso2.deployment.ob.config.datasources.rdbms.driverClassName }}"

    [open_banking_database.config.pool_options]
    maxActive = "150"
    maxWait = "60000"
    minIdle ="5"
    testOnBorrow = true
    validationQuery="SELECT 1"
    #Use below for oracle
    #validationQuery="SELECT 1 FROM DUAL"
    validationInterval="30000"
    defaultAutoCommit=false

    #================configs related to open-banking.xml=============

    [open_banking]
    deployed_spec = "UK"
    payable_accounts_retrieve_endpoint = "{{ .Values.wso2.deployment.ob.config.uk.payableAccountsRetrieveEndpoint }}"
    sharable_accounts_retrieve_endpoint = "{{ .Values.wso2.deployment.ob.config.uk.sharableAccountsRetrieveEndpoint }}"

    [open_banking.jdbc_persistence_manager.data_source]
    name= "WSO2OpenBankingDB"

    [open_banking.event_notifications]
    enable = true
    token_issuer = "www.openbank.com"
    api_url = "https://{{ template "ob-pattern-2.resource.prefix" . }}-ob-am-service:8243/open-banking/v3.1/event-notification"

    [open_banking.uk]
    x_fapi_financial_id = "open-bank"
    payment_api_url = "https://{{ template "ob-pattern-2.resource.prefix" . }}-ob-am-service:8243/open-banking/{version}/pisp/"
    account_api_url = "https://{{ template "ob-pattern-2.resource.prefix" . }}-ob-am-service:8243/open-banking/{version}/aisp/"
    funds_confirmation_api_url = "https://{{ template "ob-pattern-2.resource.prefix" . }}-ob-am-service:8243/open-banking/{version}/cbpii/"

    [open_banking.uk.acc_update_by_psu]
    enable = false

    [open_banking.uk.payment_restrictions.cut_off_date_time]
    enable = false
    policy = "REJECT"
    daily_cut_off_time = "17:30:00+00:00"
    expected_execution_time = "10:00:00+00:00"
    expected_settlement_time = "11:00:00+00:00"

    [open_banking.uk.signing_config]
    enable = false
    obie.trusted_anchors.signing = "openbanking.org.uk"
    obie.trusted_anchors.validation = "openbanking.org.uk"
    obie.org_id = "ABC1234"

    [consent_id_in_path]
    enable = true

    [debtor_account_validation]
    enable = true

    [open_banking.api_security]
    mtls_token_binding.enable = false

    [open_banking.api_security.global]
    username = "$ref{super_admin.username}"
    password = "$ref{super_admin.password}"

    [open_banking.cert_mgt]
    client_auth_header = "x-wso2-mutual-auth-cert"

    [open_banking.cert_mgt.cert_revocation_proxy]
    enable = false
    proxy_host = "PROXY_HOSTNAME"
    proxy_port = "8080"

    [open_banking.dcr]
    uri_validation.enable = false
    hostname_validation.enable = false
    software_id_as_application_name.enable = true

    [open_banking.bi_server]
    username = "$ref{super_admin.username}@carbon.super"
    password = "$ref{super_admin.password}"

    [open_banking.bi_server.data_publishing]
    enable = true
    server_url = "{tcp://{{ template "ob-pattern-2.resource.prefix" . }}-ob-bi-worker-statefulset-0.{{ template "ob-pattern-2.resource.prefix" . }}-ob-bi-worker-headless-service:7612,tcp://{{ template "ob-pattern-2.resource.prefix" . }}-ob-bi-worker-statefulset-1.{{ template "ob-pattern-2.resource.prefix" . }}-ob-bi-worker-headless-service:7612}"

    [open_banking.bi_server.tra]
    enable = true
    payment_validation.enable = true
    account_validation.enable = true

    [open_banking.bi_server.tra.receivers]
    account_validation_url = "http://{{ template "ob-pattern-2.resource.prefix" . }}-ob-bi-worker-service:8007/TRAAccountValidationApp/TRAValidationStream"
    payment_validation_url = "http://{{ template "ob-pattern-2.resource.prefix" . }}-ob-bi-worker-service:8007/TRAPaymentValidationApp/TRAValidationStream"

    [open_banking.bi_server.fraud_detection]
    enable = {{ .Values.wso2.deployment.ob.config.fraudDetection.enabled }}

    [open_banking.bi_server.fraud_detection.receivers]
    fraud_detection_url = "http://{{ template "ob-pattern-2.resource.prefix" . }}-ob-bi-worker-service:8007/FraudDetectionApp/FraudDetectionStream"
    invalid_submission_url = "http://{{ template "ob-pattern-2.resource.prefix" . }}-ob-bi-worker-service:8006/InvalidSubmissionsApp/InvalidSubmissionsStream"

    [open_banking.account_id_validation_on_retrieval]
    enable = true

    {{ if .Values.wso2.deployment.persistentRuntimeArtifacts.apacheSolrIndexing.enabled }}
    #================configs related to solr indexing=============
    [indexing]
    location = "/home/wso2carbon/solr/indexed-data"
    {{ end }}
